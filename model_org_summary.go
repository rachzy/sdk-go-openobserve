/*
openobserve

OpenObserve API documents [https://openobserve.ai/docs/](https://openobserve.ai/docs/)

API version: 0.14.5
Contact: hello@zinclabs.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OrgSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrgSummary{}

// OrgSummary struct for OrgSummary
type OrgSummary struct {
	Alerts AlertSummary `json:"alerts"`
	Pipelines PipelineSummary `json:"pipelines"`
	Streams StreamSummary `json:"streams"`
	TotalDashboards int64 `json:"total_dashboards"`
	TotalFunctions int64 `json:"total_functions"`
}

type _OrgSummary OrgSummary

// NewOrgSummary instantiates a new OrgSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrgSummary(alerts AlertSummary, pipelines PipelineSummary, streams StreamSummary, totalDashboards int64, totalFunctions int64) *OrgSummary {
	this := OrgSummary{}
	this.Alerts = alerts
	this.Pipelines = pipelines
	this.Streams = streams
	this.TotalDashboards = totalDashboards
	this.TotalFunctions = totalFunctions
	return &this
}

// NewOrgSummaryWithDefaults instantiates a new OrgSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrgSummaryWithDefaults() *OrgSummary {
	this := OrgSummary{}
	return &this
}

// GetAlerts returns the Alerts field value
func (o *OrgSummary) GetAlerts() AlertSummary {
	if o == nil {
		var ret AlertSummary
		return ret
	}

	return o.Alerts
}

// GetAlertsOk returns a tuple with the Alerts field value
// and a boolean to check if the value has been set.
func (o *OrgSummary) GetAlertsOk() (*AlertSummary, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Alerts, true
}

// SetAlerts sets field value
func (o *OrgSummary) SetAlerts(v AlertSummary) {
	o.Alerts = v
}

// GetPipelines returns the Pipelines field value
func (o *OrgSummary) GetPipelines() PipelineSummary {
	if o == nil {
		var ret PipelineSummary
		return ret
	}

	return o.Pipelines
}

// GetPipelinesOk returns a tuple with the Pipelines field value
// and a boolean to check if the value has been set.
func (o *OrgSummary) GetPipelinesOk() (*PipelineSummary, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pipelines, true
}

// SetPipelines sets field value
func (o *OrgSummary) SetPipelines(v PipelineSummary) {
	o.Pipelines = v
}

// GetStreams returns the Streams field value
func (o *OrgSummary) GetStreams() StreamSummary {
	if o == nil {
		var ret StreamSummary
		return ret
	}

	return o.Streams
}

// GetStreamsOk returns a tuple with the Streams field value
// and a boolean to check if the value has been set.
func (o *OrgSummary) GetStreamsOk() (*StreamSummary, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Streams, true
}

// SetStreams sets field value
func (o *OrgSummary) SetStreams(v StreamSummary) {
	o.Streams = v
}

// GetTotalDashboards returns the TotalDashboards field value
func (o *OrgSummary) GetTotalDashboards() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TotalDashboards
}

// GetTotalDashboardsOk returns a tuple with the TotalDashboards field value
// and a boolean to check if the value has been set.
func (o *OrgSummary) GetTotalDashboardsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalDashboards, true
}

// SetTotalDashboards sets field value
func (o *OrgSummary) SetTotalDashboards(v int64) {
	o.TotalDashboards = v
}

// GetTotalFunctions returns the TotalFunctions field value
func (o *OrgSummary) GetTotalFunctions() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TotalFunctions
}

// GetTotalFunctionsOk returns a tuple with the TotalFunctions field value
// and a boolean to check if the value has been set.
func (o *OrgSummary) GetTotalFunctionsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalFunctions, true
}

// SetTotalFunctions sets field value
func (o *OrgSummary) SetTotalFunctions(v int64) {
	o.TotalFunctions = v
}

func (o OrgSummary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrgSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["alerts"] = o.Alerts
	toSerialize["pipelines"] = o.Pipelines
	toSerialize["streams"] = o.Streams
	toSerialize["total_dashboards"] = o.TotalDashboards
	toSerialize["total_functions"] = o.TotalFunctions
	return toSerialize, nil
}

func (o *OrgSummary) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"alerts",
		"pipelines",
		"streams",
		"total_dashboards",
		"total_functions",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOrgSummary := _OrgSummary{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOrgSummary)

	if err != nil {
		return err
	}

	*o = OrgSummary(varOrgSummary)

	return err
}

type NullableOrgSummary struct {
	value *OrgSummary
	isSet bool
}

func (v NullableOrgSummary) Get() *OrgSummary {
	return v.value
}

func (v *NullableOrgSummary) Set(val *OrgSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableOrgSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableOrgSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrgSummary(val *OrgSummary) *NullableOrgSummary {
	return &NullableOrgSummary{value: val, isSet: true}
}

func (v NullableOrgSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrgSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


