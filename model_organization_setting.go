/*
openobserve

OpenObserve API documents [https://openobserve.ai/docs/](https://openobserve.ai/docs/)

API version: 0.14.5
Contact: hello@zinclabs.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OrganizationSetting type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrganizationSetting{}

// OrganizationSetting struct for OrganizationSetting
type OrganizationSetting struct {
	EnableWebsocketSearch *bool `json:"enable_websocket_search,omitempty"`
	MinAutoRefreshInterval *int32 `json:"min_auto_refresh_interval,omitempty"`
	// Ideally this should be the same as prometheus-scrape-interval (in seconds).
	ScrapeInterval *int32 `json:"scrape_interval,omitempty"`
	SpanIdFieldName *string `json:"span_id_field_name,omitempty"`
	ToggleIngestionLogs *bool `json:"toggle_ingestion_logs,omitempty"`
	TraceIdFieldName *string `json:"trace_id_field_name,omitempty"`
}

// NewOrganizationSetting instantiates a new OrganizationSetting object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationSetting() *OrganizationSetting {
	this := OrganizationSetting{}
	return &this
}

// NewOrganizationSettingWithDefaults instantiates a new OrganizationSetting object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationSettingWithDefaults() *OrganizationSetting {
	this := OrganizationSetting{}
	return &this
}

// GetEnableWebsocketSearch returns the EnableWebsocketSearch field value if set, zero value otherwise.
func (o *OrganizationSetting) GetEnableWebsocketSearch() bool {
	if o == nil || IsNil(o.EnableWebsocketSearch) {
		var ret bool
		return ret
	}
	return *o.EnableWebsocketSearch
}

// GetEnableWebsocketSearchOk returns a tuple with the EnableWebsocketSearch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationSetting) GetEnableWebsocketSearchOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableWebsocketSearch) {
		return nil, false
	}
	return o.EnableWebsocketSearch, true
}

// HasEnableWebsocketSearch returns a boolean if a field has been set.
func (o *OrganizationSetting) HasEnableWebsocketSearch() bool {
	if o != nil && !IsNil(o.EnableWebsocketSearch) {
		return true
	}

	return false
}

// SetEnableWebsocketSearch gets a reference to the given bool and assigns it to the EnableWebsocketSearch field.
func (o *OrganizationSetting) SetEnableWebsocketSearch(v bool) {
	o.EnableWebsocketSearch = &v
}

// GetMinAutoRefreshInterval returns the MinAutoRefreshInterval field value if set, zero value otherwise.
func (o *OrganizationSetting) GetMinAutoRefreshInterval() int32 {
	if o == nil || IsNil(o.MinAutoRefreshInterval) {
		var ret int32
		return ret
	}
	return *o.MinAutoRefreshInterval
}

// GetMinAutoRefreshIntervalOk returns a tuple with the MinAutoRefreshInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationSetting) GetMinAutoRefreshIntervalOk() (*int32, bool) {
	if o == nil || IsNil(o.MinAutoRefreshInterval) {
		return nil, false
	}
	return o.MinAutoRefreshInterval, true
}

// HasMinAutoRefreshInterval returns a boolean if a field has been set.
func (o *OrganizationSetting) HasMinAutoRefreshInterval() bool {
	if o != nil && !IsNil(o.MinAutoRefreshInterval) {
		return true
	}

	return false
}

// SetMinAutoRefreshInterval gets a reference to the given int32 and assigns it to the MinAutoRefreshInterval field.
func (o *OrganizationSetting) SetMinAutoRefreshInterval(v int32) {
	o.MinAutoRefreshInterval = &v
}

// GetScrapeInterval returns the ScrapeInterval field value if set, zero value otherwise.
func (o *OrganizationSetting) GetScrapeInterval() int32 {
	if o == nil || IsNil(o.ScrapeInterval) {
		var ret int32
		return ret
	}
	return *o.ScrapeInterval
}

// GetScrapeIntervalOk returns a tuple with the ScrapeInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationSetting) GetScrapeIntervalOk() (*int32, bool) {
	if o == nil || IsNil(o.ScrapeInterval) {
		return nil, false
	}
	return o.ScrapeInterval, true
}

// HasScrapeInterval returns a boolean if a field has been set.
func (o *OrganizationSetting) HasScrapeInterval() bool {
	if o != nil && !IsNil(o.ScrapeInterval) {
		return true
	}

	return false
}

// SetScrapeInterval gets a reference to the given int32 and assigns it to the ScrapeInterval field.
func (o *OrganizationSetting) SetScrapeInterval(v int32) {
	o.ScrapeInterval = &v
}

// GetSpanIdFieldName returns the SpanIdFieldName field value if set, zero value otherwise.
func (o *OrganizationSetting) GetSpanIdFieldName() string {
	if o == nil || IsNil(o.SpanIdFieldName) {
		var ret string
		return ret
	}
	return *o.SpanIdFieldName
}

// GetSpanIdFieldNameOk returns a tuple with the SpanIdFieldName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationSetting) GetSpanIdFieldNameOk() (*string, bool) {
	if o == nil || IsNil(o.SpanIdFieldName) {
		return nil, false
	}
	return o.SpanIdFieldName, true
}

// HasSpanIdFieldName returns a boolean if a field has been set.
func (o *OrganizationSetting) HasSpanIdFieldName() bool {
	if o != nil && !IsNil(o.SpanIdFieldName) {
		return true
	}

	return false
}

// SetSpanIdFieldName gets a reference to the given string and assigns it to the SpanIdFieldName field.
func (o *OrganizationSetting) SetSpanIdFieldName(v string) {
	o.SpanIdFieldName = &v
}

// GetToggleIngestionLogs returns the ToggleIngestionLogs field value if set, zero value otherwise.
func (o *OrganizationSetting) GetToggleIngestionLogs() bool {
	if o == nil || IsNil(o.ToggleIngestionLogs) {
		var ret bool
		return ret
	}
	return *o.ToggleIngestionLogs
}

// GetToggleIngestionLogsOk returns a tuple with the ToggleIngestionLogs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationSetting) GetToggleIngestionLogsOk() (*bool, bool) {
	if o == nil || IsNil(o.ToggleIngestionLogs) {
		return nil, false
	}
	return o.ToggleIngestionLogs, true
}

// HasToggleIngestionLogs returns a boolean if a field has been set.
func (o *OrganizationSetting) HasToggleIngestionLogs() bool {
	if o != nil && !IsNil(o.ToggleIngestionLogs) {
		return true
	}

	return false
}

// SetToggleIngestionLogs gets a reference to the given bool and assigns it to the ToggleIngestionLogs field.
func (o *OrganizationSetting) SetToggleIngestionLogs(v bool) {
	o.ToggleIngestionLogs = &v
}

// GetTraceIdFieldName returns the TraceIdFieldName field value if set, zero value otherwise.
func (o *OrganizationSetting) GetTraceIdFieldName() string {
	if o == nil || IsNil(o.TraceIdFieldName) {
		var ret string
		return ret
	}
	return *o.TraceIdFieldName
}

// GetTraceIdFieldNameOk returns a tuple with the TraceIdFieldName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationSetting) GetTraceIdFieldNameOk() (*string, bool) {
	if o == nil || IsNil(o.TraceIdFieldName) {
		return nil, false
	}
	return o.TraceIdFieldName, true
}

// HasTraceIdFieldName returns a boolean if a field has been set.
func (o *OrganizationSetting) HasTraceIdFieldName() bool {
	if o != nil && !IsNil(o.TraceIdFieldName) {
		return true
	}

	return false
}

// SetTraceIdFieldName gets a reference to the given string and assigns it to the TraceIdFieldName field.
func (o *OrganizationSetting) SetTraceIdFieldName(v string) {
	o.TraceIdFieldName = &v
}

func (o OrganizationSetting) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrganizationSetting) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EnableWebsocketSearch) {
		toSerialize["enable_websocket_search"] = o.EnableWebsocketSearch
	}
	if !IsNil(o.MinAutoRefreshInterval) {
		toSerialize["min_auto_refresh_interval"] = o.MinAutoRefreshInterval
	}
	if !IsNil(o.ScrapeInterval) {
		toSerialize["scrape_interval"] = o.ScrapeInterval
	}
	if !IsNil(o.SpanIdFieldName) {
		toSerialize["span_id_field_name"] = o.SpanIdFieldName
	}
	if !IsNil(o.ToggleIngestionLogs) {
		toSerialize["toggle_ingestion_logs"] = o.ToggleIngestionLogs
	}
	if !IsNil(o.TraceIdFieldName) {
		toSerialize["trace_id_field_name"] = o.TraceIdFieldName
	}
	return toSerialize, nil
}

type NullableOrganizationSetting struct {
	value *OrganizationSetting
	isSet bool
}

func (v NullableOrganizationSetting) Get() *OrganizationSetting {
	return v.value
}

func (v *NullableOrganizationSetting) Set(val *OrganizationSetting) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationSetting) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationSetting) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationSetting(val *OrganizationSetting) *NullableOrganizationSetting {
	return &NullableOrganizationSetting{value: val, isSet: true}
}

func (v NullableOrganizationSetting) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationSetting) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


