/*
openobserve

OpenObserve API documents [https://openobserve.ai/docs/](https://openobserve.ai/docs/)

API version: 0.14.5
Contact: hello@zinclabs.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MoveDashboardsRequestBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MoveDashboardsRequestBody{}

// MoveDashboardsRequestBody HTTP request body for `MoveDashboards` endpoint.
type MoveDashboardsRequestBody struct {
	// IDs of the dashboards to move.
	DashboardIds []string `json:"dashboard_ids"`
	// Indicates the folder to which dashboard should be moved.
	DstFolderId string `json:"dst_folder_id"`
}

type _MoveDashboardsRequestBody MoveDashboardsRequestBody

// NewMoveDashboardsRequestBody instantiates a new MoveDashboardsRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMoveDashboardsRequestBody(dashboardIds []string, dstFolderId string) *MoveDashboardsRequestBody {
	this := MoveDashboardsRequestBody{}
	this.DashboardIds = dashboardIds
	this.DstFolderId = dstFolderId
	return &this
}

// NewMoveDashboardsRequestBodyWithDefaults instantiates a new MoveDashboardsRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMoveDashboardsRequestBodyWithDefaults() *MoveDashboardsRequestBody {
	this := MoveDashboardsRequestBody{}
	return &this
}

// GetDashboardIds returns the DashboardIds field value
func (o *MoveDashboardsRequestBody) GetDashboardIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.DashboardIds
}

// GetDashboardIdsOk returns a tuple with the DashboardIds field value
// and a boolean to check if the value has been set.
func (o *MoveDashboardsRequestBody) GetDashboardIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DashboardIds, true
}

// SetDashboardIds sets field value
func (o *MoveDashboardsRequestBody) SetDashboardIds(v []string) {
	o.DashboardIds = v
}

// GetDstFolderId returns the DstFolderId field value
func (o *MoveDashboardsRequestBody) GetDstFolderId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DstFolderId
}

// GetDstFolderIdOk returns a tuple with the DstFolderId field value
// and a boolean to check if the value has been set.
func (o *MoveDashboardsRequestBody) GetDstFolderIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DstFolderId, true
}

// SetDstFolderId sets field value
func (o *MoveDashboardsRequestBody) SetDstFolderId(v string) {
	o.DstFolderId = v
}

func (o MoveDashboardsRequestBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MoveDashboardsRequestBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["dashboard_ids"] = o.DashboardIds
	toSerialize["dst_folder_id"] = o.DstFolderId
	return toSerialize, nil
}

func (o *MoveDashboardsRequestBody) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"dashboard_ids",
		"dst_folder_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMoveDashboardsRequestBody := _MoveDashboardsRequestBody{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMoveDashboardsRequestBody)

	if err != nil {
		return err
	}

	*o = MoveDashboardsRequestBody(varMoveDashboardsRequestBody)

	return err
}

type NullableMoveDashboardsRequestBody struct {
	value *MoveDashboardsRequestBody
	isSet bool
}

func (v NullableMoveDashboardsRequestBody) Get() *MoveDashboardsRequestBody {
	return v.value
}

func (v *NullableMoveDashboardsRequestBody) Set(val *MoveDashboardsRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableMoveDashboardsRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableMoveDashboardsRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMoveDashboardsRequestBody(val *MoveDashboardsRequestBody) *NullableMoveDashboardsRequestBody {
	return &NullableMoveDashboardsRequestBody{value: val, isSet: true}
}

func (v NullableMoveDashboardsRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMoveDashboardsRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


