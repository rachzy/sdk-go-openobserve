/*
openobserve

OpenObserve API documents [https://openobserve.ai/docs/](https://openobserve.ai/docs/)

API version: 0.14.5
Contact: hello@zinclabs.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ShortenUrlResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ShortenUrlResponse{}

// ShortenUrlResponse struct for ShortenUrlResponse
type ShortenUrlResponse struct {
	ShortUrl string `json:"short_url"`
}

type _ShortenUrlResponse ShortenUrlResponse

// NewShortenUrlResponse instantiates a new ShortenUrlResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewShortenUrlResponse(shortUrl string) *ShortenUrlResponse {
	this := ShortenUrlResponse{}
	this.ShortUrl = shortUrl
	return &this
}

// NewShortenUrlResponseWithDefaults instantiates a new ShortenUrlResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewShortenUrlResponseWithDefaults() *ShortenUrlResponse {
	this := ShortenUrlResponse{}
	return &this
}

// GetShortUrl returns the ShortUrl field value
func (o *ShortenUrlResponse) GetShortUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ShortUrl
}

// GetShortUrlOk returns a tuple with the ShortUrl field value
// and a boolean to check if the value has been set.
func (o *ShortenUrlResponse) GetShortUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShortUrl, true
}

// SetShortUrl sets field value
func (o *ShortenUrlResponse) SetShortUrl(v string) {
	o.ShortUrl = v
}

func (o ShortenUrlResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ShortenUrlResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["short_url"] = o.ShortUrl
	return toSerialize, nil
}

func (o *ShortenUrlResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"short_url",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varShortenUrlResponse := _ShortenUrlResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varShortenUrlResponse)

	if err != nil {
		return err
	}

	*o = ShortenUrlResponse(varShortenUrlResponse)

	return err
}

type NullableShortenUrlResponse struct {
	value *ShortenUrlResponse
	isSet bool
}

func (v NullableShortenUrlResponse) Get() *ShortenUrlResponse {
	return v.value
}

func (v *NullableShortenUrlResponse) Set(val *ShortenUrlResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableShortenUrlResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableShortenUrlResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShortenUrlResponse(val *ShortenUrlResponse) *NullableShortenUrlResponse {
	return &NullableShortenUrlResponse{value: val, isSet: true}
}

func (v NullableShortenUrlResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableShortenUrlResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


