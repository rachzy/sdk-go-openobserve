/*
openobserve

OpenObserve API documents [https://openobserve.ai/docs/](https://openobserve.ai/docs/)

API version: 0.14.5
Contact: hello@zinclabs.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ShortenUrlRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ShortenUrlRequest{}

// ShortenUrlRequest struct for ShortenUrlRequest
type ShortenUrlRequest struct {
	OriginalUrl string `json:"original_url"`
}

type _ShortenUrlRequest ShortenUrlRequest

// NewShortenUrlRequest instantiates a new ShortenUrlRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewShortenUrlRequest(originalUrl string) *ShortenUrlRequest {
	this := ShortenUrlRequest{}
	this.OriginalUrl = originalUrl
	return &this
}

// NewShortenUrlRequestWithDefaults instantiates a new ShortenUrlRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewShortenUrlRequestWithDefaults() *ShortenUrlRequest {
	this := ShortenUrlRequest{}
	return &this
}

// GetOriginalUrl returns the OriginalUrl field value
func (o *ShortenUrlRequest) GetOriginalUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OriginalUrl
}

// GetOriginalUrlOk returns a tuple with the OriginalUrl field value
// and a boolean to check if the value has been set.
func (o *ShortenUrlRequest) GetOriginalUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OriginalUrl, true
}

// SetOriginalUrl sets field value
func (o *ShortenUrlRequest) SetOriginalUrl(v string) {
	o.OriginalUrl = v
}

func (o ShortenUrlRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ShortenUrlRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["original_url"] = o.OriginalUrl
	return toSerialize, nil
}

func (o *ShortenUrlRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"original_url",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varShortenUrlRequest := _ShortenUrlRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varShortenUrlRequest)

	if err != nil {
		return err
	}

	*o = ShortenUrlRequest(varShortenUrlRequest)

	return err
}

type NullableShortenUrlRequest struct {
	value *ShortenUrlRequest
	isSet bool
}

func (v NullableShortenUrlRequest) Get() *ShortenUrlRequest {
	return v.value
}

func (v *NullableShortenUrlRequest) Set(val *ShortenUrlRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableShortenUrlRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableShortenUrlRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShortenUrlRequest(val *ShortenUrlRequest) *NullableShortenUrlRequest {
	return &NullableShortenUrlRequest{value: val, isSet: true}
}

func (v NullableShortenUrlRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableShortenUrlRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


