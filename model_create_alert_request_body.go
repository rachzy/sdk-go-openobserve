/*
openobserve

OpenObserve API documents [https://openobserve.ai/docs/](https://openobserve.ai/docs/)

API version: 0.14.5
Contact: hello@zinclabs.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateAlertRequestBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateAlertRequestBody{}

// CreateAlertRequestBody HTTP request body for `CreateAlert` endpoint.
type CreateAlertRequestBody struct {
	ContextAttributes map[string]string `json:"context_attributes,omitempty"`
	Description *string `json:"description,omitempty"`
	Destinations []string `json:"destinations"`
	Enabled *bool `json:"enabled,omitempty"`
	Id NullableString `json:"id,omitempty"`
	IsRealTime *bool `json:"is_real_time,omitempty"`
	LastEditedBy NullableString `json:"last_edited_by,omitempty"`
	// Time when alert was last satisfied. Unix timestamp.
	LastSatisfiedAt NullableInt64 `json:"last_satisfied_at,omitempty"`
	// Time when alert was last triggered. Unix timestamp.
	LastTriggeredAt NullableInt64 `json:"last_triggered_at,omitempty"`
	Name *string `json:"name,omitempty"`
	OrgId *string `json:"org_id,omitempty"`
	Owner NullableString `json:"owner,omitempty"`
	QueryCondition *QueryCondition `json:"query_condition,omitempty"`
	RowTemplate *string `json:"row_template,omitempty"`
	StreamName *string `json:"stream_name,omitempty"`
	StreamType *StreamType `json:"stream_type,omitempty"`
	TriggerCondition *TriggerCondition `json:"trigger_condition,omitempty"`
	// Timezone offset in minutes. Negative seconds means the western hemisphere
	TzOffset *int32 `json:"tz_offset,omitempty"`
	// Time when alert was last updated. Unix timestamp.
	UpdatedAt NullableInt64 `json:"updated_at,omitempty"`
	// Optional folder ID indicating the folder in which to create the alert. If omitted the alert will be created in the default folder.
	FolderId NullableString `json:"folder_id,omitempty"`
}

type _CreateAlertRequestBody CreateAlertRequestBody

// NewCreateAlertRequestBody instantiates a new CreateAlertRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateAlertRequestBody(destinations []string) *CreateAlertRequestBody {
	this := CreateAlertRequestBody{}
	this.Destinations = destinations
	return &this
}

// NewCreateAlertRequestBodyWithDefaults instantiates a new CreateAlertRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateAlertRequestBodyWithDefaults() *CreateAlertRequestBody {
	this := CreateAlertRequestBody{}
	return &this
}

// GetContextAttributes returns the ContextAttributes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateAlertRequestBody) GetContextAttributes() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}
	return o.ContextAttributes
}

// GetContextAttributesOk returns a tuple with the ContextAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateAlertRequestBody) GetContextAttributesOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.ContextAttributes) {
		return nil, false
	}
	return &o.ContextAttributes, true
}

// HasContextAttributes returns a boolean if a field has been set.
func (o *CreateAlertRequestBody) HasContextAttributes() bool {
	if o != nil && !IsNil(o.ContextAttributes) {
		return true
	}

	return false
}

// SetContextAttributes gets a reference to the given map[string]string and assigns it to the ContextAttributes field.
func (o *CreateAlertRequestBody) SetContextAttributes(v map[string]string) {
	o.ContextAttributes = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateAlertRequestBody) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAlertRequestBody) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateAlertRequestBody) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateAlertRequestBody) SetDescription(v string) {
	o.Description = &v
}

// GetDestinations returns the Destinations field value
func (o *CreateAlertRequestBody) GetDestinations() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Destinations
}

// GetDestinationsOk returns a tuple with the Destinations field value
// and a boolean to check if the value has been set.
func (o *CreateAlertRequestBody) GetDestinationsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Destinations, true
}

// SetDestinations sets field value
func (o *CreateAlertRequestBody) SetDestinations(v []string) {
	o.Destinations = v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *CreateAlertRequestBody) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAlertRequestBody) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *CreateAlertRequestBody) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *CreateAlertRequestBody) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateAlertRequestBody) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateAlertRequestBody) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *CreateAlertRequestBody) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given Nullablestring and assigns it to the Id field.
func (o *CreateAlertRequestBody) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *CreateAlertRequestBody) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *CreateAlertRequestBody) UnsetId() {
	o.Id.Unset()
}

// GetIsRealTime returns the IsRealTime field value if set, zero value otherwise.
func (o *CreateAlertRequestBody) GetIsRealTime() bool {
	if o == nil || IsNil(o.IsRealTime) {
		var ret bool
		return ret
	}
	return *o.IsRealTime
}

// GetIsRealTimeOk returns a tuple with the IsRealTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAlertRequestBody) GetIsRealTimeOk() (*bool, bool) {
	if o == nil || IsNil(o.IsRealTime) {
		return nil, false
	}
	return o.IsRealTime, true
}

// HasIsRealTime returns a boolean if a field has been set.
func (o *CreateAlertRequestBody) HasIsRealTime() bool {
	if o != nil && !IsNil(o.IsRealTime) {
		return true
	}

	return false
}

// SetIsRealTime gets a reference to the given bool and assigns it to the IsRealTime field.
func (o *CreateAlertRequestBody) SetIsRealTime(v bool) {
	o.IsRealTime = &v
}

// GetLastEditedBy returns the LastEditedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateAlertRequestBody) GetLastEditedBy() string {
	if o == nil || IsNil(o.LastEditedBy.Get()) {
		var ret string
		return ret
	}
	return *o.LastEditedBy.Get()
}

// GetLastEditedByOk returns a tuple with the LastEditedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateAlertRequestBody) GetLastEditedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastEditedBy.Get(), o.LastEditedBy.IsSet()
}

// HasLastEditedBy returns a boolean if a field has been set.
func (o *CreateAlertRequestBody) HasLastEditedBy() bool {
	if o != nil && o.LastEditedBy.IsSet() {
		return true
	}

	return false
}

// SetLastEditedBy gets a reference to the given NullableString and assigns it to the LastEditedBy field.
func (o *CreateAlertRequestBody) SetLastEditedBy(v string) {
	o.LastEditedBy.Set(&v)
}
// SetLastEditedByNil sets the value for LastEditedBy to be an explicit nil
func (o *CreateAlertRequestBody) SetLastEditedByNil() {
	o.LastEditedBy.Set(nil)
}

// UnsetLastEditedBy ensures that no value is present for LastEditedBy, not even an explicit nil
func (o *CreateAlertRequestBody) UnsetLastEditedBy() {
	o.LastEditedBy.Unset()
}

// GetLastSatisfiedAt returns the LastSatisfiedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateAlertRequestBody) GetLastSatisfiedAt() int64 {
	if o == nil || IsNil(o.LastSatisfiedAt.Get()) {
		var ret int64
		return ret
	}
	return *o.LastSatisfiedAt.Get()
}

// GetLastSatisfiedAtOk returns a tuple with the LastSatisfiedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateAlertRequestBody) GetLastSatisfiedAtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastSatisfiedAt.Get(), o.LastSatisfiedAt.IsSet()
}

// HasLastSatisfiedAt returns a boolean if a field has been set.
func (o *CreateAlertRequestBody) HasLastSatisfiedAt() bool {
	if o != nil && o.LastSatisfiedAt.IsSet() {
		return true
	}

	return false
}

// SetLastSatisfiedAt gets a reference to the given NullableInt64 and assigns it to the LastSatisfiedAt field.
func (o *CreateAlertRequestBody) SetLastSatisfiedAt(v int64) {
	o.LastSatisfiedAt.Set(&v)
}
// SetLastSatisfiedAtNil sets the value for LastSatisfiedAt to be an explicit nil
func (o *CreateAlertRequestBody) SetLastSatisfiedAtNil() {
	o.LastSatisfiedAt.Set(nil)
}

// UnsetLastSatisfiedAt ensures that no value is present for LastSatisfiedAt, not even an explicit nil
func (o *CreateAlertRequestBody) UnsetLastSatisfiedAt() {
	o.LastSatisfiedAt.Unset()
}

// GetLastTriggeredAt returns the LastTriggeredAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateAlertRequestBody) GetLastTriggeredAt() int64 {
	if o == nil || IsNil(o.LastTriggeredAt.Get()) {
		var ret int64
		return ret
	}
	return *o.LastTriggeredAt.Get()
}

// GetLastTriggeredAtOk returns a tuple with the LastTriggeredAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateAlertRequestBody) GetLastTriggeredAtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastTriggeredAt.Get(), o.LastTriggeredAt.IsSet()
}

// HasLastTriggeredAt returns a boolean if a field has been set.
func (o *CreateAlertRequestBody) HasLastTriggeredAt() bool {
	if o != nil && o.LastTriggeredAt.IsSet() {
		return true
	}

	return false
}

// SetLastTriggeredAt gets a reference to the given NullableInt64 and assigns it to the LastTriggeredAt field.
func (o *CreateAlertRequestBody) SetLastTriggeredAt(v int64) {
	o.LastTriggeredAt.Set(&v)
}
// SetLastTriggeredAtNil sets the value for LastTriggeredAt to be an explicit nil
func (o *CreateAlertRequestBody) SetLastTriggeredAtNil() {
	o.LastTriggeredAt.Set(nil)
}

// UnsetLastTriggeredAt ensures that no value is present for LastTriggeredAt, not even an explicit nil
func (o *CreateAlertRequestBody) UnsetLastTriggeredAt() {
	o.LastTriggeredAt.Unset()
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateAlertRequestBody) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAlertRequestBody) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateAlertRequestBody) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateAlertRequestBody) SetName(v string) {
	o.Name = &v
}

// GetOrgId returns the OrgId field value if set, zero value otherwise.
func (o *CreateAlertRequestBody) GetOrgId() string {
	if o == nil || IsNil(o.OrgId) {
		var ret string
		return ret
	}
	return *o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAlertRequestBody) GetOrgIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrgId) {
		return nil, false
	}
	return o.OrgId, true
}

// HasOrgId returns a boolean if a field has been set.
func (o *CreateAlertRequestBody) HasOrgId() bool {
	if o != nil && !IsNil(o.OrgId) {
		return true
	}

	return false
}

// SetOrgId gets a reference to the given string and assigns it to the OrgId field.
func (o *CreateAlertRequestBody) SetOrgId(v string) {
	o.OrgId = &v
}

// GetOwner returns the Owner field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateAlertRequestBody) GetOwner() string {
	if o == nil || IsNil(o.Owner.Get()) {
		var ret string
		return ret
	}
	return *o.Owner.Get()
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateAlertRequestBody) GetOwnerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Owner.Get(), o.Owner.IsSet()
}

// HasOwner returns a boolean if a field has been set.
func (o *CreateAlertRequestBody) HasOwner() bool {
	if o != nil && o.Owner.IsSet() {
		return true
	}

	return false
}

// SetOwner gets a reference to the given NullableString and assigns it to the Owner field.
func (o *CreateAlertRequestBody) SetOwner(v string) {
	o.Owner.Set(&v)
}
// SetOwnerNil sets the value for Owner to be an explicit nil
func (o *CreateAlertRequestBody) SetOwnerNil() {
	o.Owner.Set(nil)
}

// UnsetOwner ensures that no value is present for Owner, not even an explicit nil
func (o *CreateAlertRequestBody) UnsetOwner() {
	o.Owner.Unset()
}

// GetQueryCondition returns the QueryCondition field value if set, zero value otherwise.
func (o *CreateAlertRequestBody) GetQueryCondition() QueryCondition {
	if o == nil || IsNil(o.QueryCondition) {
		var ret QueryCondition
		return ret
	}
	return *o.QueryCondition
}

// GetQueryConditionOk returns a tuple with the QueryCondition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAlertRequestBody) GetQueryConditionOk() (*QueryCondition, bool) {
	if o == nil || IsNil(o.QueryCondition) {
		return nil, false
	}
	return o.QueryCondition, true
}

// HasQueryCondition returns a boolean if a field has been set.
func (o *CreateAlertRequestBody) HasQueryCondition() bool {
	if o != nil && !IsNil(o.QueryCondition) {
		return true
	}

	return false
}

// SetQueryCondition gets a reference to the given QueryCondition and assigns it to the QueryCondition field.
func (o *CreateAlertRequestBody) SetQueryCondition(v QueryCondition) {
	o.QueryCondition = &v
}

// GetRowTemplate returns the RowTemplate field value if set, zero value otherwise.
func (o *CreateAlertRequestBody) GetRowTemplate() string {
	if o == nil || IsNil(o.RowTemplate) {
		var ret string
		return ret
	}
	return *o.RowTemplate
}

// GetRowTemplateOk returns a tuple with the RowTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAlertRequestBody) GetRowTemplateOk() (*string, bool) {
	if o == nil || IsNil(o.RowTemplate) {
		return nil, false
	}
	return o.RowTemplate, true
}

// HasRowTemplate returns a boolean if a field has been set.
func (o *CreateAlertRequestBody) HasRowTemplate() bool {
	if o != nil && !IsNil(o.RowTemplate) {
		return true
	}

	return false
}

// SetRowTemplate gets a reference to the given string and assigns it to the RowTemplate field.
func (o *CreateAlertRequestBody) SetRowTemplate(v string) {
	o.RowTemplate = &v
}

// GetStreamName returns the StreamName field value if set, zero value otherwise.
func (o *CreateAlertRequestBody) GetStreamName() string {
	if o == nil || IsNil(o.StreamName) {
		var ret string
		return ret
	}
	return *o.StreamName
}

// GetStreamNameOk returns a tuple with the StreamName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAlertRequestBody) GetStreamNameOk() (*string, bool) {
	if o == nil || IsNil(o.StreamName) {
		return nil, false
	}
	return o.StreamName, true
}

// HasStreamName returns a boolean if a field has been set.
func (o *CreateAlertRequestBody) HasStreamName() bool {
	if o != nil && !IsNil(o.StreamName) {
		return true
	}

	return false
}

// SetStreamName gets a reference to the given string and assigns it to the StreamName field.
func (o *CreateAlertRequestBody) SetStreamName(v string) {
	o.StreamName = &v
}

// GetStreamType returns the StreamType field value if set, zero value otherwise.
func (o *CreateAlertRequestBody) GetStreamType() StreamType {
	if o == nil || IsNil(o.StreamType) {
		var ret StreamType
		return ret
	}
	return *o.StreamType
}

// GetStreamTypeOk returns a tuple with the StreamType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAlertRequestBody) GetStreamTypeOk() (*StreamType, bool) {
	if o == nil || IsNil(o.StreamType) {
		return nil, false
	}
	return o.StreamType, true
}

// HasStreamType returns a boolean if a field has been set.
func (o *CreateAlertRequestBody) HasStreamType() bool {
	if o != nil && !IsNil(o.StreamType) {
		return true
	}

	return false
}

// SetStreamType gets a reference to the given StreamType and assigns it to the StreamType field.
func (o *CreateAlertRequestBody) SetStreamType(v StreamType) {
	o.StreamType = &v
}

// GetTriggerCondition returns the TriggerCondition field value if set, zero value otherwise.
func (o *CreateAlertRequestBody) GetTriggerCondition() TriggerCondition {
	if o == nil || IsNil(o.TriggerCondition) {
		var ret TriggerCondition
		return ret
	}
	return *o.TriggerCondition
}

// GetTriggerConditionOk returns a tuple with the TriggerCondition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAlertRequestBody) GetTriggerConditionOk() (*TriggerCondition, bool) {
	if o == nil || IsNil(o.TriggerCondition) {
		return nil, false
	}
	return o.TriggerCondition, true
}

// HasTriggerCondition returns a boolean if a field has been set.
func (o *CreateAlertRequestBody) HasTriggerCondition() bool {
	if o != nil && !IsNil(o.TriggerCondition) {
		return true
	}

	return false
}

// SetTriggerCondition gets a reference to the given TriggerCondition and assigns it to the TriggerCondition field.
func (o *CreateAlertRequestBody) SetTriggerCondition(v TriggerCondition) {
	o.TriggerCondition = &v
}

// GetTzOffset returns the TzOffset field value if set, zero value otherwise.
func (o *CreateAlertRequestBody) GetTzOffset() int32 {
	if o == nil || IsNil(o.TzOffset) {
		var ret int32
		return ret
	}
	return *o.TzOffset
}

// GetTzOffsetOk returns a tuple with the TzOffset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAlertRequestBody) GetTzOffsetOk() (*int32, bool) {
	if o == nil || IsNil(o.TzOffset) {
		return nil, false
	}
	return o.TzOffset, true
}

// HasTzOffset returns a boolean if a field has been set.
func (o *CreateAlertRequestBody) HasTzOffset() bool {
	if o != nil && !IsNil(o.TzOffset) {
		return true
	}

	return false
}

// SetTzOffset gets a reference to the given int32 and assigns it to the TzOffset field.
func (o *CreateAlertRequestBody) SetTzOffset(v int32) {
	o.TzOffset = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateAlertRequestBody) GetUpdatedAt() int64 {
	if o == nil || IsNil(o.UpdatedAt.Get()) {
		var ret int64
		return ret
	}
	return *o.UpdatedAt.Get()
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateAlertRequestBody) GetUpdatedAtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpdatedAt.Get(), o.UpdatedAt.IsSet()
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *CreateAlertRequestBody) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt.IsSet() {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given NullableInt64 and assigns it to the UpdatedAt field.
func (o *CreateAlertRequestBody) SetUpdatedAt(v int64) {
	o.UpdatedAt.Set(&v)
}
// SetUpdatedAtNil sets the value for UpdatedAt to be an explicit nil
func (o *CreateAlertRequestBody) SetUpdatedAtNil() {
	o.UpdatedAt.Set(nil)
}

// UnsetUpdatedAt ensures that no value is present for UpdatedAt, not even an explicit nil
func (o *CreateAlertRequestBody) UnsetUpdatedAt() {
	o.UpdatedAt.Unset()
}

// GetFolderId returns the FolderId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateAlertRequestBody) GetFolderId() string {
	if o == nil || IsNil(o.FolderId.Get()) {
		var ret string
		return ret
	}
	return *o.FolderId.Get()
}

// GetFolderIdOk returns a tuple with the FolderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateAlertRequestBody) GetFolderIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FolderId.Get(), o.FolderId.IsSet()
}

// HasFolderId returns a boolean if a field has been set.
func (o *CreateAlertRequestBody) HasFolderId() bool {
	if o != nil && o.FolderId.IsSet() {
		return true
	}

	return false
}

// SetFolderId gets a reference to the given NullableString and assigns it to the FolderId field.
func (o *CreateAlertRequestBody) SetFolderId(v string) {
	o.FolderId.Set(&v)
}
// SetFolderIdNil sets the value for FolderId to be an explicit nil
func (o *CreateAlertRequestBody) SetFolderIdNil() {
	o.FolderId.Set(nil)
}

// UnsetFolderId ensures that no value is present for FolderId, not even an explicit nil
func (o *CreateAlertRequestBody) UnsetFolderId() {
	o.FolderId.Unset()
}

func (o CreateAlertRequestBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateAlertRequestBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ContextAttributes != nil {
		toSerialize["context_attributes"] = o.ContextAttributes
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["destinations"] = o.Destinations
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if !IsNil(o.IsRealTime) {
		toSerialize["is_real_time"] = o.IsRealTime
	}
	if o.LastEditedBy.IsSet() {
		toSerialize["last_edited_by"] = o.LastEditedBy.Get()
	}
	if o.LastSatisfiedAt.IsSet() {
		toSerialize["last_satisfied_at"] = o.LastSatisfiedAt.Get()
	}
	if o.LastTriggeredAt.IsSet() {
		toSerialize["last_triggered_at"] = o.LastTriggeredAt.Get()
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.OrgId) {
		toSerialize["org_id"] = o.OrgId
	}
	if o.Owner.IsSet() {
		toSerialize["owner"] = o.Owner.Get()
	}
	if !IsNil(o.QueryCondition) {
		toSerialize["query_condition"] = o.QueryCondition
	}
	if !IsNil(o.RowTemplate) {
		toSerialize["row_template"] = o.RowTemplate
	}
	if !IsNil(o.StreamName) {
		toSerialize["stream_name"] = o.StreamName
	}
	if !IsNil(o.StreamType) {
		toSerialize["stream_type"] = o.StreamType
	}
	if !IsNil(o.TriggerCondition) {
		toSerialize["trigger_condition"] = o.TriggerCondition
	}
	if !IsNil(o.TzOffset) {
		toSerialize["tz_offset"] = o.TzOffset
	}
	if o.UpdatedAt.IsSet() {
		toSerialize["updated_at"] = o.UpdatedAt.Get()
	}
	if o.FolderId.IsSet() {
		toSerialize["folder_id"] = o.FolderId.Get()
	}
	return toSerialize, nil
}

func (o *CreateAlertRequestBody) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"destinations",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateAlertRequestBody := _CreateAlertRequestBody{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateAlertRequestBody)

	if err != nil {
		return err
	}

	*o = CreateAlertRequestBody(varCreateAlertRequestBody)

	return err
}

type NullableCreateAlertRequestBody struct {
	value *CreateAlertRequestBody
	isSet bool
}

func (v NullableCreateAlertRequestBody) Get() *CreateAlertRequestBody {
	return v.value
}

func (v *NullableCreateAlertRequestBody) Set(val *CreateAlertRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAlertRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAlertRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAlertRequestBody(val *CreateAlertRequestBody) *NullableCreateAlertRequestBody {
	return &NullableCreateAlertRequestBody{value: val, isSet: true}
}

func (v NullableCreateAlertRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAlertRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


